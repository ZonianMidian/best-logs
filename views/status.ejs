<%- include('navbar') -%>
<head>
	<title>Logs | Status</title>
	<meta name="description" content="Status of instances" />
	<meta property="og:title" content="Logs | Status" />
	<meta property="og:image" content="/static/DankG.png" />
	<meta property="og:description" content="Status of instances" />
</head>
<body>
	<div class="text-center margin content">
		<h1>Status</h1>
		<div class="container">
			<% for (let key in instances) { %>
			<div class="card">
				<h2><a href="https://<%= key %>" data-umami-event="instance-<%= key %>"><%= key %></a></h2>
				<% if (instances[key].maintainer) { %>
				<h3>
					by
					<a href="https://twitch.tv/<%= instances[key].maintainer %>" data-umami-event="maintainer-<%= instances[key].maintainer %>"
						><%= instances[key].maintainer %></a
					>
				</h3>
				<% } else {%>
				<h3>&#x200E;</h3>
				<% } %>
				<% if (instances[key].channels && instances[key].channels.length > 0) { %>
				<span class="status up">&#x2191; UP</span>
				<span
					><%= new Intl.NumberFormat().format(instances[key].channels.length) %>
					channels</span
				>
				<% } else { %>
				<span class="status down">&#x2193; DOWN</span>
				<span>&#x200E;</span>
				<% } %>
			</div>
			<% } %>
		</div>
		<p class="time" id="last-update">Last Update: X</p>
		<p class="time" id="next-update">Next Update: X</p>
		<p class="time" id="current-uptime">Uptime: X</p>
	</div>
	<div id="version">
		<p>
			Version
			<%= version %>
		</p>
	</div>
</body>

<script>
	function getTime(timestamp, future) {
		const now = Date.now();
		const difference = future ? timestamp - now : now - timestamp;

		if (difference < 0) {
			return '0 seconds';
		}

		const seconds = Math.floor(difference / 1000);
		const minutes = Math.floor(seconds / 60);
		const hours = Math.floor(minutes / 60);
		const days = Math.floor(hours / 24);

		if (days > 0) {
			return days === 1 ? '1 day' : `${days} days`;
		} else if (hours > 0) {
			return hours === 1 ? '1 hour' : `${hours} hours`;
		} else if (minutes > 0) {
			return minutes === 1 ? '1 minute' : `${minutes} minutes`;
		} else {
			return seconds === 1 ? '1 second' : `${seconds} seconds`;
		}
	}

	const intervalId = setInterval(() => {
		const lastElement = document.getElementById('last-update');
		const nextElement = document.getElementById('next-update');
		const uptimeElement = document.getElementById('current-uptime');

		const lastTime = getTime(`<%= lastUpdate %>`);
		const nextTime = getTime(`<%= lastUpdate + nextUpdate %>`, true);
		const currentUptime = getTime(`<%= uptime %>`);

		lastElement.innerText = `Last update: ${lastTime} ago`;
		nextElement.innerText = `Next update: In ${nextTime}`;
		uptimeElement.innerText = `Uptime: ${currentUptime}`;

		if (nextTime === '0 seconds') {
			clearInterval(intervalId);
			setTimeout(() => {
				location.reload();
			}, 5000);
		}
	}, 500);
</script>
